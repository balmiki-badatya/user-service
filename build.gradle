plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.5.6-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.7'
	id "org.sonarqube" version "6.3.1.5724"
}

group = 'com.microops'
version = '0.0.1-SNAPSHOT'
description = 'User Lifecyecle'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

jacoco {
	toolVersion = "0.8.12"
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
}

sonarqube {
	properties {
		property "sonar.projectKey", "user-service"
		property 'sonar.projectName', 'user-service'
		property 'sonar.java.source', 21
		property 'sonar.junit.reportPaths', 'build/results'
		property 'encoding', 'UTF-8'
		property 'charSet', 'UTF-8'
		property "sonar.sources", "src/main/java"
		property "sonar.tests", "src/test/java"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url = 'https://repo.spring.io/snapshot' }
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
//	runtimeOnly 'org.postgresql:postgresql'
//	runtimeOnly 'org.postgresql:r2dbc-postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('sonarqube') {
	dependsOn(jacocoTestReport)
}
