pipeline {
    agent any
    tools {
        gradle 'gradle'
        jdk 'open-jdk-21'
    }
    stages {
        stage ("clean-workspace"){
            steps{
                sh 'echo cleaning workspace'
                cleanWs()
            }
        }
        stage ("git-checkout") {
            steps {
                sh 'echo cloning git repo'
                git branch: 'master',
                    url: 'https://github.com/balmiki-badatya/user-service.git'
            }
        }
        stage ("gradle-build") {
            steps {
                sh 'echo building gradle project'
                sh './gradlew clean build -x test --refresh-dependencies'
            }
        }
        stage ("unit-test") {
            steps {
                sh './gradlew test'
            }
        }
        stage ("sonarqube-analysis") {
            steps {
                sh 'curl -v https://sonar.microops.io/api/system/status || echo "SonarQube server unreachable"'
                withSonarQubeEnv('sonarqube-server') {
                    sh './gradlew sonar -Dsonar.qualitygate=microops-custom-gate'
                }
            }
        }
        stage ("qualitygate-check") {
            steps {
                timeout(time: 20, unit: 'MINUTES') {
                     waitForQualityGate abortPipeline: false, credentialsId: 'sonar-jenkins-token'
                }
            }
        }
    }
}